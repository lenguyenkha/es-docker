version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:

### Workspace Utilities ##################################
    workspace:
      build:
        context: workspace
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - ./workspace/config/php7.4.ini:/usr/local/etc/php/php.ini
        - ./hooks:/var/www/html/.git/hooks/
        - ./workspace/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      ports:
        - "${WORKSPACE_SSH_PORT}:22"
      tty: true
      expose:
        - "9000"
      environment:
        - DOCKER_HOST=tcp://docker-in-docker:2375
      networks:
        - frontend
        - backend
      links:
        - docker-in-docker

### Docker-in-Docker ################################################
    docker-in-docker:
      image: docker:dind
      privileged: true
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      expose:
        - 2375
      networks:
        - backend
### NGINX Server #########################################
    nginx:
      build:
        context: nginx
        args:
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
          - CHANGE_SOURCE=${CHANGE_SOURCE}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - swaggerui
      links:
        - swaggerui:swaggerui
      networks:
        - frontend
        - backend
### Swagger UI ###############################################
    swaggerui:
      image: swaggerapi/swagger-ui
      environment:
      - API_URL=./ese-api.yaml
      volumes:
      - ../swagger/openapi.yaml:/usr/share/nginx/html/ese-api.yaml
      restart: always
      networks:
      - frontend
      - backend
      links:
      - docker-in-docker
### MySQL ################################################
    mysql:
      build:
        context: mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        - backend
### ElasticSearch ################################################
    elasticsearch:
      build: elasticsearch
      volumes:
        - ${DATA_PATH_HOST}/elasticsearch:/usr/share/elasticsearch/data
        - ./elasticsearch/config/sudachi:/usr/share/elasticsearch/config/sudachi
      environment:
        - node.name=es1
        - cluster.name=es-docker-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - cluster.initial_master_nodes=es1
      ulimits:
        memlock:
          soft: -1
          hard: -1
      ports:
       - "${ELASTICSEARCH_PORT}:9200"
       - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
      networks:
        - frontend
        - backend
### Kibana ################################################
    kibana:
      image: docker.elastic.co/kibana/kibana:7.7.0
      ports:
        - "${KIBANA_PORT}:5601"
      environment:
        - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
        - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
      links:
        - "elasticsearch"
      networks:
        - frontend
        - backend